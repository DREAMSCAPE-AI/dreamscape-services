// Dreamscape Services - Unified PostgreSQL Schema
generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/@prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ========== AUTH SERVICE MODELS ==========
model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  firstName String?
  lastName  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  profile   UserProfile?
  behaviors UserBehavior[]
  
  @@map("users")
}

// ========== USER SERVICE MODELS ==========
model UserProfile {
  id          String   @id @default(cuid())
  userId      String   @unique
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  firstName   String
  lastName    String
  phone       String?
  dateOfBirth DateTime?
  avatar      String?
  preferences Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("user_profiles")
}

model UserBehavior {
  id        String   @id @default(cuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  action    String
  data      Json?
  timestamp DateTime @default(now())

  @@map("user_behaviors")
}

// ========== VOYAGE SERVICE MODELS ==========
model FlightData {
  id            String   @id @default(cuid())
  flightNumber  String
  airline       String
  origin        String
  destination   String
  departureTime DateTime
  arrivalTime   DateTime
  price         Decimal  @db.Decimal(10, 2)
  currency      String   @default("EUR")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("flight_data")
}

model HotelData {
  id          String   @id @default(cuid())
  name        String
  location    String
  rating      Float?
  pricePerNight Decimal @db.Decimal(10, 2)
  currency    String   @default("EUR")
  amenities   Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("hotel_data")
}

model BookingData {
  id          String   @id @default(cuid())
  userId      String
  type        BookingType
  reference   String   @unique
  status      BookingStatus
  totalAmount Decimal  @db.Decimal(10, 2)
  currency    String   @default("EUR")
  data        Json     // Flexible data for different booking types
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("booking_data")
}

model LocationData {
  id          String   @id @default(cuid())
  name        String
  country     String
  city        String
  coordinates Json?    // {lat: number, lng: number}
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("location_data")
}

// ========== AI SERVICE MODELS ==========
model PredictionData {
  id          String   @id @default(cuid())
  userId      String?
  type        PredictionType
  input       Json
  output      Json
  confidence  Float?
  createdAt   DateTime @default(now())

  @@map("prediction_data")
}

model Analytics {
  id        String   @id @default(cuid())
  service   String   // 'auth', 'user', 'voyage', 'ai'
  event     String
  data      Json?
  userId    String?
  timestamp DateTime @default(now())

  @@map("analytics")
}

// ========== ENUMS ==========
enum BookingType {
  FLIGHT
  HOTEL
  TRANSFER
  ACTIVITY
  PACKAGE
}

enum BookingStatus {
  PENDING
  CONFIRMED
  CANCELLED
  COMPLETED
}

enum PredictionType {
  PRICE_FORECAST
  RECOMMENDATION
  DEMAND_PREDICTION
  ROUTE_OPTIMIZATION
}